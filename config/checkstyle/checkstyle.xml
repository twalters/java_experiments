<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
          "-//Puppy Crawl//DTD Check Configuration 1.3//EN"
          "http://www.puppycrawl.com/dtds/configuration_1_3.dtd">

<!--

  Checkstyle configuration that checks the sun coding conventions from:

    - the Java Language Specification at
      http://java.sun.com/docs/books/jls/second_edition/html/index.html

    - the Sun Code Conventions at http://java.sun.com/docs/codeconv/

    - the Javadoc guidelines at
      http://java.sun.com/j2se/javadoc/writingdoccomments/index.html

    - the JDK Api documentation http://java.sun.com/j2se/docs/api/index.html

    - some best practices

  Checkstyle is very configurable. Be sure to read the documentation at
  http://checkstyle.sf.net (or in your downloaded distribution).

  Most Checks are configurable, be sure to consult the documentation.

  To completely disable a check, just comment it out or delete it from the file.

  Finally, it is worth reading the documentation.

-->

<module name="Checker">
    <!--
        If you set the basedir property below, then all reported file
        names will be relative to the specified directory. See
        http://checkstyle.sourceforge.net/5.x/config.html#Checker
    -->

    <!-- Checks for Size Violations.                    -->
    <!-- See http://checkstyle.sf.net/config_sizes.html -->
    <module name="FileLength">
        <property name="max" value="1500"/>
    </module>

    <!-- Checks for whitespace                               -->
    <!-- See http://checkstyle.sf.net/config_whitespace.html -->
    <module name="FileTabCharacter">
        <property name="eachLine" value="true" />
    </module>
    <!-- Checks for Headers                                -->
    <!-- Following interprets the header file as regular expressions. -->
    <!-- See http://checkstyle.sf.net/config_header.html   -->
    <module name="Header">
        <property name="headerFile" value="${basedir}/config/checkstyle/java.header" />
    </module>

    <module name="SuppressionFilter">
        <property name="file" value="${basedir}/config/checkstyle/suppressions.xml"/>
    </module>

    <module name="TreeWalker">
        <property name="tabWidth" value="4"/>
        <!-- Checks for Javadoc comments.                     -->
        <!-- See http://checkstyle.sf.net/config_javadoc.html -->
        <module name="JavadocVariable">
            <property name="scope" value="protected"/>
        </module>
        <module name="JavadocMethod">
            <property name="scope" value="protected"/>
            <property name="allowUndeclaredRTE" value="true"/>
        </module>
        <module name="JavadocStyle">
            <property name="checkEmptyJavadoc" value="true" />
        </module>
        <module name="JavadocType">
            <property name="scope" value="protected"/>
        </module>


        <!-- Checks for Naming Conventions.                  -->
        <!-- See http://checkstyle.sf.net/config_naming.html -->
        <module name="ClassTypeParameterName"/>
        <module name="ConstantName"/>
        <module name="MemberName"/>
        <module name="MethodName"/>
        <module name="MethodTypeParameterName"/>
        <module name="PackageName"/>
        <module name="ParameterName"/>
        <module name="StaticVariableName"/>
        <module name="TypeName"/>

        <!-- Checks for imports                              -->
        <!-- See http://checkstyle.sf.net/config_import.html -->
        <module name="AvoidStarImport"/>
        <module name="AvoidStaticImport">
            <property name="excludes" value="org.junit.Assert.*"/>
            <property name="excludes" value="org.mockito.Mockito.*"/>
            <property name="excludes" value="org.mockito.Matchers.*"/>
            <property name="excludes" value="org.hamcrest.core.StringContains.*"/>
            <property name="excludes" value="org.hamcrest.CoreMatchers.*"/>
            <property name="excludes" value="org.hamcrest.MatcherAssert.*"/>
            <property name="excludes" value="org.hamcrest.Matchers.*"/>
            <property name="excludes" value="org.powermock.api.mockito.PowerMockito.*"/>
            <property name="excludes" value="org.powermock.api.support.membermodification.MemberMatcher.*"/>
            <property name="excludes" value="org.powermock.api.support.membermodification.MemberModifier.*"/>
        </module>
        <module name="IllegalImport">
            <property name="illegalPkgs" value="junit.framework, org.codehaus.jackson" />
        </module>
        <module name="ImportOrder">
            <property name="groups" value="/^javax?\./,org"/>
            <property name="ordered" value="true"/>
            <property name="separated" value="true"/>
            <property name="option" value="bottom"/>
        </module>
        <module name="RedundantImport"/>
        <module name="UnusedImports"/>

        <!-- Checks for Size Violations.                    -->
        <!-- See http://checkstyle.sf.net/config_sizes.html -->
        <!-- Decide what the maximum allowable number of lines in an anonymous inner class is -->
        <module name="AnonInnerLength" />
        <!-- Decide what the maximums should be before enabling this module-->
        <module name="JavaNCSS">
            <property name="methodMaximum" value="50"/>
            <property name="classMaximum" value="1500"/>
            <property name="fileMaximum" value="2000"/>
        </module>
        <module name="LineLength">
            <property name="max" value="120"/>
        </module>
        <module name="MethodLength"/>

        <module name="ParameterNumber">
            <property name="max" value="15"/>
            <property name="tokens" value="METHOD_DEF"/>
        </module>

        <!-- Checks for whitespace                               -->
        <!-- See http://checkstyle.sf.net/config_whitespace.html -->
        <module name="EmptyForInitializerPad"/>
        <module name="EmptyForIteratorPad"/>
        <module name="GenericWhitespace"/>
        <module name="MethodParamPad"/>
        <module name="NoWhitespaceAfter"/>
        <module name="NoWhitespaceBefore"/>
        <module name="OperatorWrap"/>
        <module name="ParenPad"/>
        <module name="TypecastParenPad"/>
        <module name="WhitespaceAfter"/>
        <module name="WhitespaceAround"/>

        <!-- Modifier Checks                                    -->
        <!-- See http://checkstyle.sf.net/config_modifiers.html -->
        <module name="DeclarationOrder"/>
        <module name="ModifierOrder"/>
        <module name="RedundantModifier"/>

        <!-- Checks for blocks. You know, those {}'s         -->
        <!-- See http://checkstyle.sf.net/config_blocks.html -->
        <module name="AvoidNestedBlocks"/>
        <module name="EmptyBlock"/>
        <module name="LeftCurly"/>
        <module name="NeedBraces"/>
        <module name="RightCurly"/>

        <!-- Checks for common coding problems               -->
        <!-- See http://checkstyle.sf.net/config_coding.html -->
        <module name="CovariantEquals"/>
        <module name="EmptyStatement"/>
        <module name="EqualsHashCode"/>
        <module name="EqualsAvoidNull"/>
        <module name="HiddenField">
            <property name="ignoreSetter" value="true" />
            <property name="ignoreConstructorParameter" value="true" />
        </module>
        <module name="IllegalCatch"/>
        <module name="IllegalInstantiation"/>
        <module name="IllegalThrows"/>
        <module name="JUnitTestCase"/>
        <module name="MagicNumber"/>
        <module name="RedundantThrows">
            <property name="suppressLoadErrors" value="true"/>
        </module>
        <module name="SimplifyBooleanExpression"/>
        <module name="SimplifyBooleanReturn"/>
        <module name="StringLiteralEquality"/>

        <!-- Checks for class design                         -->
        <!-- See http://checkstyle.sf.net/config_design.html -->
        <module name="DeclarationOrder"/>
        <module name="FinalClass"/>
        <module name="HideUtilityClassConstructor"/>
        <module name="InterfaceIsType"/>
        <module name="MutableException"/>
        <module name="UncommentedMain">
            <property name="excludedClasses" value="\.Main$"/>
        </module>

        <!-- Complexity Checks                             -->
        <module name="BooleanExpressionComplexity"/>
        <module name="CyclomaticComplexity">
            <property name="max" value="15"/>
        </module>


        <!-- Checks for annotations                        -->
        <module name="MissingDeprecated"/>
        <module name="MissingOverride"/>

        <!-- Miscellaneous other checks.                   -->
        <!-- See http://checkstyle.sf.net/config_misc.html -->
        <module name="ArrayTypeStyle"/>
        <module name="DefaultComesLast"/>
        <module name="ExplicitInitialization"/>
        <module name="IllegalType">
            <property name="illegalClassNames" value="java.lang.StringBuffer;junit.framework.Assert"/>
        </module>
        <module name="InnerTypeLast"/>
        <module name="MultipleVariableDeclarations"/>
        <module name="NestedForDepth">
            <property name="max" value="2"/>
        </module>
        <module name="NestedIfDepth">
            <property name="max" value="2"/>
        </module>
        <module name="NestedTryDepth">
            <property name="max" value="2"/>
        </module>
        <module name="NoFinalizer"/>
        <module name="OneStatementPerLine"/>
        <module name="OuterTypeFilename"/>
        <module name="OuterTypeNumber"/>
        <module name="PackageDeclaration"/>
        <module name="SuperClone"/>
        <module name="UpperEll"/>
        <module name="UnnecessaryParentheses"/>
    </module>
</module>
